  server {
        listen 443 ssl; # Listen on IPv4 for SSL
        listen [::]:443 ssl; # Listen on IPv6 for SSL

        server_name apii.fr.to;

        ssl_certificate /etc/letsencrypt/live/apii.fr.to/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/apii.fr.to/privkey.pem;

        # Strong SSL/TLS configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' ws: wss:; media-src 'self' data:; object-src 'none';";

        # Enable gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 1000;
        gzip_vary on;

        # Proxy Cache Path
        proxy_cache_path /tmp/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

        # Caching Static Files
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
            expires 30d; # Cache for 30 days
            add_header Cache-Control "public"; # Allow public caching
            # Add Expires headers
            add_header Expires "access plus 30 days";
        }

        # Handling API Responses
        location / {
            proxy_pass http://client;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable caching for proxied responses
            proxy_cache my_cache;
            proxy_cache_valid 200 1h; # Cache successful responses for 1 hour
            proxy_cache_bypass $http_CACHEBUST; # Allows bypassing the cache with a specific header
        }

        location /api {
            proxy_pass http://server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Disable caching for HTML pages
        location ~* \.(html)$ {
            expires -1; # Set to a shorter duration if needed
        }

    }